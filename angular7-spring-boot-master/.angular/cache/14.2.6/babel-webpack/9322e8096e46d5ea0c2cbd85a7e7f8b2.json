{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ManageExpenseComponent } from '../../manage-expense/manage-expense.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"../../../service/database.service\";\nimport * as i3 from \"../../../service/authentication.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/table\";\nimport * as i6 from \"@angular/material/paginator\";\nconst _c0 = [\"sorter\"];\n\nfunction TableSummaryComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"div\", 4);\n    i0.ɵɵelement(2, \"span\", 5);\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction TableSummaryComponent_div_2_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \"Name\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"ngClass\", \"column-width\");\n  }\n}\n\nfunction TableSummaryComponent_div_2_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"column-width\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r8.description, \" \");\n  }\n}\n\nfunction TableSummaryComponent_div_2_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \"Amount\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"ngClass\", \"column-width\");\n  }\n}\n\nfunction TableSummaryComponent_div_2_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"column-width\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r9.amount, \" \");\n  }\n}\n\nfunction TableSummaryComponent_div_2_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \"Type\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"ngClass\", \"column-width\");\n  }\n}\n\nfunction TableSummaryComponent_div_2_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", \"column-width\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r10.type, \" \");\n  }\n}\n\nfunction TableSummaryComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵtext(1, \" jjj \");\n    i0.ɵɵelementStart(2, \"table\", 7);\n    i0.ɵɵtext(3, \" hhh \");\n    i0.ɵɵelementContainerStart(4, 8);\n    i0.ɵɵtemplate(5, TableSummaryComponent_div_2_th_5_Template, 2, 1, \"th\", 9);\n    i0.ɵɵtemplate(6, TableSummaryComponent_div_2_td_6_Template, 2, 2, \"td\", 10);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(7, 11);\n    i0.ɵɵtemplate(8, TableSummaryComponent_div_2_th_8_Template, 2, 1, \"th\", 9);\n    i0.ɵɵtemplate(9, TableSummaryComponent_div_2_td_9_Template, 2, 2, \"td\", 10);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(10, 12);\n    i0.ɵɵtemplate(11, TableSummaryComponent_div_2_th_11_Template, 2, 1, \"th\", 9);\n    i0.ɵɵtemplate(12, TableSummaryComponent_div_2_td_12_Template, 2, 2, \"td\", 10);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"dataSource\", ctx_r1.expensesData);\n  }\n}\n\nconst _c1 = function () {\n  return [5, 10, 20, 50];\n};\n\nexport let TableSummaryComponent = /*#__PURE__*/(() => {\n  class TableSummaryComponent {\n    constructor(dialog, database, authenticationService) {\n      this.dialog = dialog;\n      this.database = database;\n      this.authenticationService = authenticationService;\n      this.data = [];\n      this.displayColumns = ['name', 'amount', 'date', 'category', 'type', 'comments'];\n      this.expensesData = new MatTableDataSource();\n      this.metrics = [];\n      this.displayData = false;\n    }\n\n    ngOnInit() {\n      this.getUserExpenses();\n      this.expensesData.paginator = this.paginator;\n      this.expensesData.sort = this.sort; // this.expensesData = new MatTableDataSource<Expense>(this.data);\n\n      console.log(\"this.expensesData \" + this.expensesData);\n    }\n\n    getUserExpenses() {\n      //const currentUser: string = this.loginService.getUser() ? this.loginService.getUser().email : null;\n      // if (currentUser) {\n      this.database.getUserExpenses().subscribe(res => {\n        console.log(res);\n        this.expensesData = res;\n        this.displayData = true;\n      }); // }\n    }\n\n    checkDate(e, prop) {\n      this[prop] = e;\n    } // getUserCategories() {\n    //   this.database.getCurrentCategories(this.loginService.getUserId())\n    //     .then(jsonData => {\n    //       const obj = jsonData.toJSON();\n    //       const categoriesArr = Object.keys(obj).map((key) => obj[key]);\n    //       this.loginService.setCategories(categoriesArr);\n    //     }).catch(e => {\n    //   })\n    // }\n\n\n    subToExpensesChange() {\n      const userId = this.authenticationService.getUserId(); //this.isLoadingExpenses = true;\n\n      if (userId) {// this.expensesData = this.database.getUserExpenses(Number(userId))\n        //   .subscribe(snapshots => this.filterData(snapshots));\n      } else {//this.isLoadingExpenses = false;\n      }\n    }\n\n    parseData(snapsShots) {\n      const data = [];\n      snapsShots.forEach(snapshot => {\n        const expense = snapshot.payload.exportVal();\n        expense.id = snapshot.key;\n        data.push(expense);\n      });\n      return data;\n    }\n\n    filterData(snapshots) {\n      // this.isLoadingExpenses = false;\n      const parsedData = this.parseData(snapshots);\n      const firstDate = new Date(Math.min.apply(null, parsedData.map(e => new Date(e.date))));\n      const lastDate = new Date(Math.max.apply(null, parsedData.map(e => new Date(e.date))));\n      const numOfEntries = parsedData.length;\n      const totalAmount = this.getTotal(parsedData);\n      this.metrics = [{\n        color: null,\n        value: firstDate.toDateString().slice(3, 15),\n        metricTitle: 'First Expense Date',\n        icon: 'today'\n      }, {\n        color: null,\n        value: lastDate.toDateString().slice(3, 15),\n        metricTitle: 'Latest Expense Date',\n        icon: 'today'\n      }, {\n        color: null,\n        value: numOfEntries,\n        metricTitle: 'Number of Expenses',\n        icon: 'receipt'\n      }, {\n        color: 'money-icon',\n        value: totalAmount,\n        metricTitle: 'Total Amount',\n        icon: 'attach_money'\n      }]; // this.categories = parsedData\n      //   .map(item => item.category)\n      //   .filter((value, index, self) => self.indexOf(value) === index);\n\n      const pieData = []; // for (const category of this.categories) {\n      //   let categorySum = 0;\n      //   for (const value of parsedData) {\n      //     if (value.category === category) {\n      //       categorySum += value.amount;\n      //     }\n      //   }\n      //   const dataObj = {name: category, y: categorySum, value: categorySum.toFixed(2)};\n      //   pieData.push(dataObj);\n      // }\n      // this.expenseDataChart = pieData;\n      // this.expenseDataTable = parsedData;\n      // this.isDataReady = true;\n      // this.isLoadingExpenses = false;\n    }\n\n    getTotal(expenses) {\n      let categorySum = 0;\n\n      for (const expense of expenses) {\n        categorySum += expense.amount;\n      }\n\n      return categorySum.toFixed(2);\n    }\n\n    getCategoryTotals(expenses) {\n      // const categories = expenses\n      //   .map(item => item.category)\n      //   .filter((value, index, self) => self.indexOf(value) === index);\n      const totals = []; // for (const category of categories) {\n      //   let categorySum = 0;\n      //   for (const value of expenses) {\n      //     // if (value.category === category) {\n      //     //   categorySum += value.amount as number;\n      //     // }\n      //   }\n      //   const dataObj = {name: category, amount: categorySum.toFixed(2)};\n      //   totals.push(dataObj);\n      // }\n\n      return totals.toString();\n    }\n\n    ngOnDestroy() {\n      if (this.expensesData) {//  this.expensesData.unsubscribe();\n      }\n    }\n\n    ngAfterViewInit() {\n      this.expensesData.sort = this.sort;\n    }\n\n    ngOnChanges(changes) {\n      if (!changes.data.firstChange) {\n        this.expensesData = new MatTableDataSource(this.data);\n        this.expensesData.paginator = this.paginator;\n        this.expensesData.sort = this.sort;\n      }\n    }\n\n    isDataEmpty() {\n      return this.data.length === 0;\n    }\n\n    editData(expense) {\n      const dialogRef = this.dialog.open(ManageExpenseComponent, {\n        data: expense,\n        hasBackdrop: true,\n        disableClose: true\n      });\n    }\n\n  }\n\n  TableSummaryComponent.ɵfac = function TableSummaryComponent_Factory(t) {\n    return new (t || TableSummaryComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.DatabaseService), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n  };\n\n  TableSummaryComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TableSummaryComponent,\n    selectors: [[\"app-table-summary\"]],\n    viewQuery: function TableSummaryComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 7);\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    inputs: {\n      data: \"data\",\n      displayColumns: \"displayColumns\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 4,\n    consts: [[\"class\", \"d-flex justify-content-center\", 4, \"ngIf\"], [\"class\", \"table-container\", 4, \"ngIf\"], [\"showFirstLastButtons\", \"\", 3, \"pageSizeOptions\"], [1, \"d-flex\", \"justify-content-center\"], [\"role\", \"status\", 1, \"spinner-border\"], [\"id\", \"loading\", 1, \"sr-only\"], [1, \"table-container\"], [\"mat-table\", \"\", \"matSort\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 3, \"ngClass\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"ngClass\", 4, \"matCellDef\"], [\"matColumnDef\", \"amount\"], [\"matColumnDef\", \"type\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 3, \"ngClass\"], [\"mat-cell\", \"\", 3, \"ngClass\"]],\n    template: function TableSummaryComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TableSummaryComponent_div_0_Template, 3, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵtemplate(2, TableSummaryComponent_div_2_Template, 13, 1, \"div\", 1);\n        i0.ɵɵelement(3, \"mat-paginator\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.displayData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(3, _c1));\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgIf, i5.MatTable, i5.MatHeaderCellDef, i5.MatColumnDef, i5.MatCellDef, i5.MatHeaderCell, i5.MatCell, i6.MatPaginator],\n    styles: [\".table-container[_ngcontent-%COMP%]{max-height:500px;overflow:auto}.table-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.table-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.mat-cell[_ngcontent-%COMP%], .table-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   td.mat-footer-cell[_ngcontent-%COMP%], .table-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   th.mat-header-cell[_ngcontent-%COMP%]{padding:15px}.table-container[_ngcontent-%COMP%]   .column-width[_ngcontent-%COMP%]{flex:0 0 35%}\"]\n  });\n  return TableSummaryComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}