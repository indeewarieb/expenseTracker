{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DatabaseService = /*#__PURE__*/(() => {\n  class DatabaseService {\n    constructor(http) {\n      this.http = http;\n      this.expenseAddedSource = new Subject();\n      this.categoriesAddedSource = new Subject();\n      this.expenseAddedAnnounced$ = this.expenseAddedSource.asObservable();\n      this.categoriesAddedAnnounced$ = this.categoriesAddedSource.asObservable();\n    }\n\n    announceExpenseCreated(message) {\n      this.expenseAddedSource.next(message);\n    }\n\n    announceCategoriesAdded(message) {\n      this.categoriesAddedSource.next(message);\n    }\n\n    saveNewExpense(expense, userId) {\n      return this.http.post('http://localhost:8080/api/v1/expenses/register', expense);\n    }\n\n    getUserExpenses() {\n      return this.http.get('http://localhost:8080/api/v1/expenses/' + localStorage.getItem('currentUserId')).pipe(map(data => {\n        //data1 = data;\n        if (data[0] != null) {\n          localStorage.setItem('currentUser', JSON.stringify(data[0])); //this.currentUserSubject.next(data[0]);\n\n          return data;\n        } else {}\n      }));\n    }\n\n  }\n\n  DatabaseService.ɵfac = function DatabaseService_Factory(t) {\n    return new (t || DatabaseService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DatabaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DatabaseService,\n    factory: DatabaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return DatabaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}