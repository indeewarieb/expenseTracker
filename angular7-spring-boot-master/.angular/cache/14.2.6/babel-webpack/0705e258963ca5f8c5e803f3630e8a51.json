{"ast":null,"code":"//import { MatSnackBar } from '@angular/material/snack-bar';\nimport { first } from 'rxjs/operators';\nimport { expense_types } from '../../shared/constants/expense-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../service/authentication.service\";\nimport * as i2 from \"../../service/database.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/progress-bar\";\n\nfunction LogExpenseComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"mat-progress-bar\", 17);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LogExpenseComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"small\");\n    i0.ɵɵtext(2, \"Name is required (minimum 4 characters).\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction LogExpenseComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"small\");\n    i0.ɵɵtext(2, \"Amount is required (positive amount, max 2 decimal places).\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport let LogExpenseComponent = /*#__PURE__*/(() => {\n  class LogExpenseComponent {\n    constructor(loginService, database) {\n      this.loginService = loginService;\n      this.database = database;\n      this.categories = this.loginService.getCurrentCategories();\n      this.types = expense_types;\n      this.expenseObj = {\n        description: null,\n        date: null,\n        type: null,\n        amount: null,\n        userId: null\n      };\n      this.isLoading = false;\n      this.dateError = false;\n      database.categoriesAddedAnnounced$.subscribe(category => {\n        this.updateExpenseCategories(category);\n      });\n    }\n\n    ngOnInit() {}\n\n    updateExpenseCategories(category) {\n      this.categories = this.loginService.getCurrentCategories();\n    }\n\n    saveExpenseEntry(expenseForm) {\n      this.isLoading = true; // if (typeof this.expenseObj.date !== 'string') {\n\n      this.expenseObj.date = new Date();\n      this.expenseObj.userId = Number(localStorage.getItem(\"currentUserId\")); // 1234\n      //}\n\n      this.database.saveNewExpense(this.expenseObj, this.loginService.getUserId()).pipe(first()).subscribe(data => {\n        this.isLoading = false;\n        expenseForm.resetForm();\n        this.resetExpenseObj();\n        this.showSnackBar();\n        this.announceChange();\n      }, error => {\n        this.isLoading = false;\n        console.log('Failed');\n      });\n    }\n\n    announceChange() {\n      this.database.announceExpenseCreated('new expense');\n    }\n\n    resetExpenseObj() {\n      this.expenseObj = {\n        description: null,\n        date: null,\n        type: null,\n        amount: null,\n        userId: 0\n      };\n    }\n\n    showSnackBar() {//this.snackBar.open('Expense saved!', '', {duration: 2000});\n    }\n\n    save(value, valid, form) {\n      if (valid) {\n        this.saveExpenseEntry(form);\n      }\n    }\n\n    checkDate(date) {\n      this.dateError = this.expenseObj.date == null;\n    }\n\n    clearForm(expenseForm) {\n      this.dateError = false;\n      expenseForm.resetForm();\n      this.resetExpenseObj();\n    }\n\n    formatAmount() {\n      if (this.expenseObj.amount !== null) {\n        if (typeof this.expenseObj.amount !== 'string') {\n          const rounded = this.expenseObj.amount.toFixed(2);\n          this.expenseObj.amount = parseFloat(rounded);\n        }\n      }\n    }\n\n    ngOnDestroy() {}\n\n  }\n\n  LogExpenseComponent.ɵfac = function LogExpenseComponent_Factory(t) {\n    return new (t || LogExpenseComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.DatabaseService));\n  };\n\n  LogExpenseComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LogExpenseComponent,\n    selectors: [[\"app-log-expense\"]],\n    decls: 30,\n    vars: 7,\n    consts: [[\"id\", \"enter-expense\"], [\"novalidate\", \"\", 3, \"ngSubmit\"], [\"f\", \"ngForm\"], [4, \"ngIf\"], [1, \"row\"], [1, \"col-sm-6\"], [1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"Expense description\", \"name\", \"description\", \"type\", \"text\", \"required\", \"\", \"minlength\", \"4\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Amount\", \"type\", \"number\", \"min\", \"1\", \"name\", \"amount\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\", \"blur\"], [\"amount\", \"ngModel\"], [\"matInput\", \"\", \"placeholder\", \"Type\", \"type\", \"text\", \"name\", \"type\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"ngModel\"], [1, \"d-flex\", \"justify-content-end\"], [\"type\", \"button\", \"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"], [\"color\", \"primary\"], [1, \"alert\", \"alert-danger\"]],\n    template: function LogExpenseComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LogExpenseComponent_Template_form_ngSubmit_1_listener() {\n          i0.ɵɵrestoreView(_r7);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return i0.ɵɵresetView(ctx.save(_r0.value, _r0.valid, _r0));\n        });\n        i0.ɵɵtemplate(3, LogExpenseComponent_div_3_Template, 2, 0, \"div\", 3);\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"Enter Expense\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"mat-form-field\", 6)(9, \"input\", 7, 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LogExpenseComponent_Template_input_ngModelChange_9_listener($event) {\n          return ctx.expenseObj.description = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, LogExpenseComponent_div_11_Template, 3, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 4)(13, \"div\", 5)(14, \"mat-form-field\", 6)(15, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function LogExpenseComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.expenseObj.amount = $event;\n        })(\"blur\", function LogExpenseComponent_Template_input_blur_15_listener() {\n          return ctx.formatAmount();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(17, LogExpenseComponent_div_17_Template, 3, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"div\", 4)(19, \"div\", 5)(20, \"mat-form-field\", 6)(21, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function LogExpenseComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.expenseObj.type = $event;\n        });\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(23, \"div\", 14)(24, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function LogExpenseComponent_Template_button_click_24_listener() {\n          i0.ɵɵrestoreView(_r7);\n\n          const _r0 = i0.ɵɵreference(2);\n\n          return i0.ɵɵresetView(ctx.clearForm(_r0));\n        });\n        i0.ɵɵtext(25, \" Reset \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"button\", 16)(27, \"mat-icon\");\n        i0.ɵɵtext(28, \"save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(29, \" Save \");\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(2);\n\n        const _r2 = i0.ɵɵreference(10);\n\n        const _r4 = i0.ɵɵreference(16);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.expenseObj.description);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r2.errors && (_r2.dirty || _r2.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.expenseObj.amount);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r4.errors && (_r4.dirty || _r4.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.expenseObj.type);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.MinValidator, i4.NgModel, i4.NgForm, i5.MatFormField, i6.MatInput, i7.MatButton, i8.MatIcon, i9.MatProgressBar],\n    styles: [\"#enter-expense[_ngcontent-%COMP%]   .row[_ngcontent-%COMP%]{padding:20px 0}\"]\n  });\n  return LogExpenseComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}